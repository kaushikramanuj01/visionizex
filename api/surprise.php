<?php
set_time_limit(0);

header('Content-Type: application/json');
require_once '../config/init.php';
$content="";
$message="";
$choice="";
$msg="";
$limit="";
$image_name="";
$user_id="";
$success=0;
// exit();
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    
    $input_f = file_get_contents('php://input');
    $input = json_decode($input_f, true);

    $user_id =$input['user_id'];

    $log_id = $SubDB->generateUniqueID();
    $log = array(
        "_id" => $log_id,
        "user_id" => $user_id
    );
    $log_where = array();
    $SubDB->performCRUD("tblsurpricelog", "i", $log, $log_where);

    $where = array("email" => $user_id); // Customize the WHERE clause as needed
    $userData = $SubDB->execute("tblcustmaster", $where,"","");

    // if(sizeof($userData) > 0){
        $current_credit = $SubDB->countcredit();
    
        $OPENAI_API_KEY = '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'; //OpenAI API key
        $url = 'https://api.openai.com/v1/chat/completions';
        // $url = 'https://api.openai.com/v1/embeddings';
        // "model" => "text-embedding-ada-002",
        
        $data = array(
            "model" => "gpt-3.5-turbo",
            "messages" => array(
                array(
                    "role" => "system",
                    "content" => "give prompt to generate image,
                    give directly prompt , do not give any extra text and don't give prompt in commas."
                ),
                array(
                    "role" => "user",
                    "content" => ""
                ),
            ),
            "temperature" => 1,
            "max_tokens" => 1000,
            "top_p" => 1,
            "frequency_penalty" => 0,
            "presence_penalty" => 0
        );
        
        $headers = array(
            'Content-Type: application/json',
            'Authorization: Bearer ' . $OPENAI_API_KEY
        );
        $ch = curl_init($url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        curl_close($ch);

        $response['result_rk'] = $result;
            
        $message2="";
        if ($result === false) {
            $msg = 'Prompt cURL Error: ' . curl_error($ch);
            $message = "Server Error.";
        } else {
            // print_r($result);
            $data = json_decode($result, true);

            $response['data_rk'] = $data;

            // Check if 'choices' key exists in the response
            if (isset($data['choices'])) {
                // if (!isset($data['choices'])) {
                $choice = $data['choices'][0]; // Access the first choice
                $choice_data = $choice['message'];
                $content = $choice_data['content'];
                
                $_id = $SubDB->generateUniqueID();
                $response['_id']  = $_id;
                $inst = array(
                    "_id" => $_id,
                    "userid" => $user_id,
                    "user_prompt" => $userprompt,
                    "ai_prompt" => $content,
                    "text_response" => $result
                );
                $response['inst'] = $inst;
                $where = array();
                $message_1 = $SubDB->performCRUD("tblsurpricelog", "i", $inst, $where);
                
                $response['message_1'] = $message_1;
                // echo json_encode(['generatedText' => $content]);

                if($content !== ""){
                    $success=1;
                }else{
                    $message = "Server Error - Generate";
                }
            } else {
                $message = "Server Error. No Choices found.";

                // ! temporery delete this 
                // $content = "This is generated by surprise me api";
                $success=1;
            }
        }  
    // }else{
    //     $message = "User Not Found.";
    // }
} else {
    $message = "Invalid Request";
}
            
$log = array(
    "msg" => $msg,
    "user_id" => $user_id
);
$log_where = array("_id"=>$log_id);
$log_message = $SubDB->performCRUD("tblgenapilog", "u", $log, $log_where);


$response['limit']=$limit;
$response['success']=$success;
$response['generatedText']=$content;
$response['msg']=$msg;
$response['message']=$message;
$response['image_name']=$image_name;
echo json_encode($response);
// echo json_encode(['msg' => $msg]);
?>
